<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>players = 2 //number of players to follow
p1x = 0        //hold players x/y positions
p1y = 0
p2x = 0
p2y = 0
largex = obj_player //hold largest and smallest positions to handle camera zoom
largey = obj_player
smallx = obj_player
smally = obj_player
var_zoom = 1
hviewStart = view_hview[0] // zoom defaults
wviewStart = view_wview[0]
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if players == 2
{
        p1x = obj_player.x // gather x/y positions for 2 players mode
        p1y = obj_player.y
        p2x = obj_player2.x
        p2y = obj_player2.y

        if p1x &gt; p2x {largex = obj_player} //determine lowest x/y and highest x/y for 2 players mode
        else if p2x &gt; p1x {largex = obj_player2} //also setting variable largex/y/smallx/y to the player fathest away

        if p1x &lt; p2x {smallx = obj_player}
       else if p2x &lt; p1x {smallx = obj_player2}

       if p1y &gt; p2y {largey = obj_player}
       else if p2y &gt; p1y {largey = obj_player2}

       if p1y &lt; p2y {smally = obj_player}
       else if p2y &lt; p1y {smally = obj_player2}
       
distx = (largex.x - smallx.x); camPlayX = smallx.x //get distance between the farthest objects 
disty = (largey.y - smally.y); camPlayY = smally.y //and tell camera which object to follow

dist12x = distx
dist12y = disty

if dist12x &gt; 650 or dist12y &gt; 650 //when the players get 650px apart begin to zoom out
{
    if dist12x &gt; dist12y{var_zoom = lerp(var_zoom,(dist12x * 0.0015),0.5)}   //smooth zoom using LERP
    else if dist12x &lt; dist12y{var_zoom = lerp(var_zoom,(dist12y * 0.0015),0.5)}

    view_hview[0] = floor(hviewStart * var_zoom)  //adjust view to create zoom
    view_wview[0] = floor(wviewStart * var_zoom)
}
else
{
    view_hview[0] = hviewStart  //zoom default
    view_wview[0] = wviewStart
}

movex =  (camPlayX)+ dist12x *0.5  //center the view from the smallest x/y object + half way to the farthest object
movey = (camPlayY)+ dist12y *0.5
dist = distance_to_point(movex,movey)
spd = lerp(0,dist,0.12)
move_towards_point(movex,movey,spd)  //move the camera
}
else if players == 1  //simple camera movement with lerp,  no zoom
{
  movex =  obj_player_p1.x
  movey = obj_player_p1.y
  dist = distance_to_point(movex,movey)
  spd = lerp(0,dist,0.12)
  move_towards_point(movex,movey,spd)

  view_hview[0] = hviewStart
  view_wview[0] = wviewStart
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
