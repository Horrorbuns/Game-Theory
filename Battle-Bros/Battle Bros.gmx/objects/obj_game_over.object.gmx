<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.winner = 0;
global.game_over = false;

padding = 32;


current_selection = 0;
choice[0] = "Yes";
choice[1] = "No";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.gamemode = 0
{
    p1_stock = global.p1_stock;
    p2_stock = global.p2_stock;
}
left = gamepad_button_check_pressed(global.player1_pad,gp_padl);
right = gamepad_button_check_pressed(global.player2_pad,gp_padr);
confirm = gamepad_button_check_pressed(global.player1_pad,gp_face1) ||
          gamepad_button_check_pressed(global.player1_pad,gp_start);

if left &amp;&amp; global.game_over = true
{
    current_selection -= 1;
    if (current_selection &lt; 0 ) current_selection = 1;
}

if right &amp;&amp; global.game_over = true
{
    current_selection += 1;
    if (current_selection &gt; 1) current_selection = 0;
}

if confirm &amp;&amp; global.game_over = true
{
    switch(current_selection)
    {
        case 0:
            room_restart();
            // Check for variables relating to the room.
            if global.gamemode = 0
            {
                global.p1_stock = global.reset;
                global.p2_stock = global.reset;
            }

            //if gamemode = 1, global time = global reset_time
            
            break;
        
        case 1:
            room_goto(room_arena_selection);
            audio_stop_all();
            audio_play_sound(sfx_menu,2,0);
            audio_play_sound(music_title,1,true);
            break;

        default:
            room_goto(room_title);
            audio_stop_all();
            audio_play_sound(sfx_menu,2,0);
            audio_play_sound(music_title,1,true);
            break;
    }
}


if global.gamemode = 0 &amp;&amp; global.game_over = false
{
    if (global.winner = 0) global.winner_name = "Player 1";
    else if (global.winner = 1) global.winner_name = "Player 2";
    
    if p1_stock &lt;= 0 &amp;&amp; p2_stock &gt; 0 // Player 2 wins
    {
        global.game_over = true;
        global.winner = 1;
    }
    
    else if p2_stock &lt;= 0 &amp;&amp; p1_stock &gt; 0
    {
        global.game_over = true;
        global.winner = 0 // Player 1 wins
    }
    
    else if p2_stock == 0 &amp;&amp; p1_stock == 0
    {
        global.game_over = true;
        global.winner_name = "No one";
    }
    
}

if global.gamemode = 1 &amp;&amp; global.game_over = false
{
    if (global.winner = 0) global.winner_name = "Player 1";
    else if (global.winner = 1) global.winner_name = "Player 2";

    if global.player1_score &gt; global.player2_score
    {
        global.winner = 0; // Player 1 wins.
    }

    else if global.player2_score &gt; global.player1_score
    {
        global.winner = 1; // Player 2 wins.
    }
    
    else if global.player1_score == global.player2_score
    {
        global.winner_name = "No one"
    }
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
windowed = !window_get_fullscreen();

if windowed
{
    x1 = 340;
    x2 = 940;
    y1 = 160;
    y2 = 560;
}


else
{
    x1 = room_width/2 - 300;
    x2 = room_width/2 + 300;
    y1 = room_height/2 - 200;
    y2 = room_height/2 + 200;
}


if windowed
{
    text_x = window_get_width()/2;
    text_y = window_get_height()/2-64;
}


else
{
    text_x = room_width/2;
    text_y = room_height/2-64;
}

if global.game_over = true
{
    draw_set_color(c_black);
    draw_set_font(font_HUD);
    

    draw_roundrect(x1,y1,x2,y2,0);

    draw_set_color(c_white)
    draw_text(text_x,text_y,global.winner_name + " is the winner!");
    draw_text(text_x,text_y+padding*2,"Rematch?");
    
    for (i=0;i&lt;2;i++)
    {
        if (current_selection = i) draw_set_color(c_red);
        else draw_set_color(c_white);
        
        draw_text(text_x-32+(i*64),text_y+96,choice[i]);
        
    }


    draw_set_font(font_main);
    draw_set_color(c_white);
    draw_text(text_x,text_y+padding*4,"(Press Start/A to Confirm)");

}

draw_set_halign(fa_left);
draw_set_valign(fa_top);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
