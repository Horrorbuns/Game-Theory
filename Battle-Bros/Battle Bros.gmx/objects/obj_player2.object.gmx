<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_p2_pistol</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Variables Init

player_init();
ammo_count();
image_xscale = -1;

hit_points = 100;
pad_num = global.player2_pad; //Make a script to establish controller values!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movespeed = 13;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Reset rolling
rolling = false;
can_hit = true;
movespeed = 8;
rollspeed = 15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Can_roll

can_roll = true;
can_hit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//weapon_show
weapon_show = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reloading + script
reloading = false;
can_fire = true;

reload_alarm(); 
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Backup can_roll

can_roll = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///can_fire

can_fire = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///can_hit

can_hit = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.game_over = false
{
    ///Player Behaviors
    player_controls(); // Basic button configuration
    player_movement(); // Collision and Movement
    player_actions(); // Weapon Cycle, Rolling, etc.
    magazine_size(); // Establishes max magazine sizes and reloading
    player_sounds();
    
    //Fire Weapons
    weapon_fire(0,obj_bullet_pistol_p2);
    weapon_fire(1,obj_bullet_shotgun_p2);
    weapon_fire(2,obj_bullet_assault_p2);
    weapon_fire(3,obj_bullet_rocket_p2);
    weapon_fire(4,obj_bullet_railgun_charge_p2);
}

//Interaction with item pickups.
ammo_pickup(obj_pickup_pistol,0);
ammo_pickup(obj_pickup_shotgun,1);
ammo_pickup(obj_pickup_assault,2);
ammo_pickup(obj_pickup_rocket,3);
if place_meeting(x,y,obj_pickup_railgun) //Railgun ammo is a special case.
{
    ammo_clip[4] += 1;
    if (ammo_clip[4] &gt; 1) ammo_clip[4] = 1;
    with (instance_nearest(x,y,obj_pickup_railgun)) instance_destroy();
}

//Bullet Damage

bullet_damage(obj_bullet_pistol_p1,10);
if distance_to_object(obj_player) &lt; 256
{
    bullet_damage(obj_bullet_shotgun_p1,20);
}
else bullet_damage(obj_bullet_shotgun_p1,15);
bullet_damage(obj_bullet_assault_p1,15);
bullet_damage(obj_bullet_rocket_p1, 30);
bullet_damage(obj_bullet_rocket_splash,15);
bullet_damage(obj_bullet_railgun_p1,50);

if hit_points &lt;= 0
{
    global.p2_stock -= 1;
    instance_destroy();
    explode();
    
}

if place_meeting(x,y,obj_lava_damage) &amp;&amp; global.gamemode = 1
{
    instance_destroy();
    explode();
    global.player1_score += 1;
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Powerup Effects
if place_meeting(x,y,obj_powerup_shield)
{
    with (instance_nearest(x,y,obj_powerup_shield))
    {
        instance_destroy();
    }
    instance_create(x,y,obj_power_shield_p2)
}

if place_meeting(x,y,obj_powerup_reflect)
{
    with (instance_nearest(x,y,obj_powerup_reflect))
    {
        instance_destroy();
    }
    instance_create(x,y,obj_power_reflect_p2);
}

if place_meeting(x,y,obj_powerup_speed)
{
    movespeed = 20;
    alarm[7] = 300;    
    with (instance_nearest(x,y,obj_powerup_speed))
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Character Sprites
var grounded;
var sprite = current_selection;

//Checks to see if player is standing on something.
if place_meeting(x,y+1,obj_wall)
{
    grounded = true;
}

else grounded = false;

if hsp==0 &amp;&amp; grounded = true
{
    image_speed = 0;
    image_index = 0;
}

else if (sprite = 0 || sprite = 1) &amp;&amp; grounded = true
{
    sprite_index = spr_p2_pistol;
    image_speed = .5;
}

else if (sprite = 2 || sprite = 4) &amp;&amp; grounded = true
{
    sprite_index = spr_p2_assault;
    image_speed = .5;
}

else if (sprite = 3) &amp;&amp; grounded = true
{
    sprite_index = spr_p2_rocket;
    image_speed = .5;
}

else if grounded = false //Various jumping animations.
{
    switch(sprite)
    {
        case 0:
        case 1:
            sprite_index = spr_p2_pistol;
            image_index = 2;
            image_speed = 0;
            break;
        case 2:
            sprite_index = spr_p2_assault;
            image_index = 2;
            image_speed = 0;
            break;
        case 3:
            sprite_index =spr_p2_rocket;
            image_index = 2;
            image_speed = 0;
            break;
        case 4:
            sprite_index = spr_p2_assault;
            image_index = 2;
            image_speed = 0;
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_color(c_black);
draw_text(x+32,y-32,string(ammo[current_selection]) + '/' + string(MAX_AMMO[current_selection]));
draw_text(x+32,y,ammo_clip[current_selection]);
if (reloading = true)
{
    increase = .5;
    increase += .05;
    if (increase &gt; 1) increase = 1;
    draw_sprite_ext(spr_reloading,0,x,y-64,1,1,0,c_white,increase)
}


//Draw the Weapon Selections
draw_weapons();
draw_set_alpha(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
