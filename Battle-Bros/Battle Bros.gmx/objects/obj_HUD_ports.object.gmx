<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

p2x_port = 1920-48;
p2x_text = 1920-96;

wp2x_port = 1280 - 48;
wp2x_text = 1280 - 96;

p1_max = "/100";
p2_max = "/100";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>windowed = !window_get_fullscreen()


if !instance_exists(obj_player) p1_health = 0;
if !instance_exists(obj_player2) p2_health = 0;

draw_sprite(spr_p1_port,0,48,48);
if (!windowed) draw_sprite(spr_p2_port,0,1920-48,48);
else draw_sprite(spr_p2_port,0,wp2x_port,48);

draw_set_font(font_HUD);
if instance_exists(obj_player)
{
    p1_health = obj_player.hit_points;
    if global.gamemode = 0
    {
        draw_text(48+48,32,string(p1_health) + p1_max);
        draw_text(48+48,64,"LIVES: " + string(global.p1_stock));
    }
    
    if global.gamemode = 1
    {
        draw_text(48+48,32,string(p1_health) + p1_max);
        draw_text(48+48,64,"SCORE: " + string(global.player1_score));
    }
    
}

if instance_exists(obj_player2)
{
    
    p2_health = obj_player2.hit_points;

    
    if global.gamemode = 0
    {
        draw_set_halign(fa_right);
        if !windowed
        {
            draw_text(1920-(48+48),32,string(p2_health) + p2_max);
            draw_text(1920-(48+48),64,"LIVES: " + string(global.p2_stock));
        }
        else
        {
            draw_text(wp2x_text,32,string(p2_health) + p2_max);
            draw_text(wp2x_text,64,"LIVES: " + string(global.p2_stock));
        }
    }
    if global.gamemode = 1
    {
        if !windowed
        {
            draw_text(1920-(48+48),32,string(p2_health) + p2_max);
            draw_text(1920-(48+48+48),64,"SCORE: " + string(global.player2_score));
        }
        
        else
        {
            draw_text(wp2x_text,32,string(p2_health) + p2_max);
            draw_text(wp2x_text,64,"SCORE: " + string(global.player2_score));
        }
    }
}

draw_set_halign(fa_left);
draw_set_font(font_main);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
